{
  "Virtual Machines": {
    "VM Instance Inventory": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.347Z"
    },
    "List all VM instances (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Check instance types and sizes (`compute.machineTypes.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Verify machine family usage (`compute.machineTypes.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Review instance labels and tags (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Check for deprecated machine types (`compute.machineTypes.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Verify instance naming conventions (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "VM Optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Check for underutilized instances (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.351Z"
    },
    "Review instance scheduling (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify preemptible/spot instance usage (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for right-sized instances (`compute.instances.list`, `monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Review CPU and memory utilization patterns (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for idle instances during non-business hours (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify instance reservations (`compute.reservations.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for sustained use discounts (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "VM Security": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify OS patch levels (`compute.instances.list`, `compute.images.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for secure boot enabled (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Review service account usage (`compute.instances.list`, `iam.serviceAccounts.get`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify disk encryption (`compute.disks.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for Shielded VM features (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify integrity monitoring (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Review OS login configuration (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check for confidential computing (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Verify VM metadata security (`compute.instances.list`)": {
      "status": "✓",
      "error": null,
      "script": "compute-audit.js",
      "timestamp": "2025-05-11T19:55:34.352Z"
    }
  },
  "Kubernetes (GKE)": {
    "Cluster Configuration": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "List all GKE clusters (`container.clusters.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.352Z"
    },
    "Check cluster versions (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify node pool configurations (`container.nodePools.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review cluster labels and tags (`container.clusters.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for regional vs zonal clusters (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify cluster maintenance windows (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Cluster Security": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for private clusters (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify workload identity (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review network policies (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for binary authorization (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify pod security policies (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for container image scanning (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review cluster security posture (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify cluster logging and monitoring (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Cluster Optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review node pool sizing (`container.nodePools.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for cluster autoscaling (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify vertical pod autoscaling (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review resource quotas (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for node auto-provisioning (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify cluster resource utilization (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review pod disruption budgets (`container.clusters.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for cost-optimized node pools (`container.nodePools.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    }
  },
  "Serverless": {
    "Cloud Functions": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "List all functions (`cloudfunctions.functions.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check function versions (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review memory allocations (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify function triggers (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for cold start optimization (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review function timeout settings (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify function security settings (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for function retry policies (`cloudfunctions.functions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Cloud Run": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "List all services (`run.services.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check service configurations (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review scaling settings (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify container images (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for concurrency settings (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review CPU allocation (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify service security settings (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for service mesh integration (`run.services.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    }
  },
  "Cloud Storage": {
    "Bucket Inventory": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "List all buckets (`storage.buckets.list`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check bucket locations (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Review storage classes (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Verify bucket labels (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.353Z"
    },
    "Check for bucket versioning (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review bucket lifecycle rules (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify bucket retention policies (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for bucket logging (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Bucket Security": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check IAM policies (`storage.buckets.getIamPolicy`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify bucket permissions (`storage.buckets.getIamPolicy`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review public access (`storage.buckets.getIamPolicy`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for uniform bucket access (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify bucket encryption (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for bucket lock (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review bucket CORS configuration (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify bucket access logs (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Bucket Management": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review lifecycle rules (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check versioning status (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify retention policies (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review object metadata (`storage.objects.list`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for object immutability (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review storage class transitions (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify object access patterns (`storage.objects.list`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for bucket cost optimization (`storage.buckets.get`)": {
      "status": "✓",
      "error": null,
      "script": "storage-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    }
  },
  "Persistent Disks": {
    "Disk Inventory": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "List all persistent disks (`compute.disks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check disk types (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review disk sizes (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify disk labels (`compute.disks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for disk snapshots (`compute.snapshots.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review disk performance (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify disk attachments (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for disk reservations (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Disk Security": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for encryption (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify snapshot policies (`compute.snapshots.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review access controls (`compute.disks.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for secure deletion (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify disk integrity (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for disk backup policies (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review disk access logs (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify disk security policies (`compute.disks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    }
  },
  "VPC": {
    "Network Configuration": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "List all VPCs (`compute.networks.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check subnet configurations (`compute.subnetworks.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review routing tables (`compute.routes.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify network labels (`compute.networks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for VPC peering (`compute.networks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Review network topology (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Verify network performance (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Check for network cost optimization (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:55:34.354Z"
    },
    "Network Security": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.362Z"
    },
    "Check firewall rules (`compute.firewalls.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.362Z"
    },
    "Review VPC flow logs (`compute.networks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.362Z"
    },
    "Verify private Google access (`compute.subnetworks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.362Z"
    },
    "Check for VPC service controls (`compute.networks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.362Z"
    },
    "Verify network encryption (`compute.networks.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for network segmentation (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review network access policies (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify network security posture (`compute.networks.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    }
  },
  "Load Balancing": {
    "Load Balancer Inventory": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "List all load balancers (`compute.forwardingRules.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check load balancer types (`compute.forwardingRules.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review backend services (`compute.backendServices.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify health checks (`compute.healthChecks.list`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for load balancer redundancy (`compute.forwardingRules.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review load balancer performance (`compute.forwardingRules.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify load balancer scaling (`compute.forwardingRules.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for load balancer cost optimization (`compute.forwardingRules.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Load Balancer Security": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check SSL certificates (`compute.sslCertificates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review security policies (`compute.securityPolicies.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify WAF configurations (`compute.securityPolicies.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for DDoS protection (`compute.securityPolicies.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify TLS configuration (`compute.sslCertificates.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for SSL policies (`compute.sslPolicies.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review load balancer access logs (`compute.forwardingRules.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify load balancer security posture (`compute.forwardingRules.get`)": {
      "status": "✓",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    }
  },
  "Cloud DNS": {
    "DNS Configuration": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "List all DNS zones (`dns.managedZones.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check DNS records (`dns.resourceRecordSets.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review DNSSEC status (`dns.managedZones.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify DNS policies (`dns.policies.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for DNS redundancy (`dns.managedZones.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review DNS performance (`dns.managedZones.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify DNS security settings (`dns.managedZones.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for DNS cost optimization (`dns.managedZones.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "networking-audit.js",
      "timestamp": "2025-05-11T19:57:33.363Z"
    }
  },
  "Identity & Access Management": {
    "IAM Policies": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "List all IAM policies (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check role assignments (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review custom roles (`iam.roles.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify principle of least privilege (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for role separation (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review IAM audit logs (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify IAM security posture (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for IAM cost optimization (`resourcemanager.projects.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Service Accounts": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "List all service accounts (`iam.serviceAccounts.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check key management (`iam.serviceAccountKeys.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review account permissions (`iam.serviceAccounts.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify workload identity (`iam.serviceAccounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for service account rotation (`iam.serviceAccounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Review service account usage (`iam.serviceAccounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Verify service account security (`iam.serviceAccounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    },
    "Check for service account cost optimization (`iam.serviceAccounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.363Z"
    }
  },
  "Security Controls": {
    "Organization Policies": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "List all organization policies (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check policy enforcement (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review constraint settings (`orgpolicy.constraints.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify policy inheritance (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for policy compliance (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review policy audit logs (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify policy security posture (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for policy cost optimization (`orgpolicy.policy.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Security Command Center": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check security findings (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review vulnerability reports (`securitycenter.sources.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify security health analytics (`securitycenter.assets.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for threat detection (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review security recommendations (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify security monitoring (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for security automation (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review security cost optimization (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    }
  },
  "Billing": {
    "Billing Configuration": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "List all billing accounts (`billing.accounts.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check billing export (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review budget alerts (`billing.budgets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify cost allocation (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for billing optimization (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review billing reports (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify billing security (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for billing automation (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Cost Optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for committed use discounts (`compute.commitments.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review sustained use discounts (`compute.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify resource utilization (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for idle resources (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review cost recommendations (`recommender.recommendations.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify cost allocation tags (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for cost anomaly detection (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review cost optimization automation (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    }
  },
  "Resource Management": {
    "Resource Organization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "List all projects (`resourcemanager.projects.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check project hierarchy (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review resource labels (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify resource quotas (`compute.regions.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for resource optimization (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review resource security (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify resource automation (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for resource cost optimization (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Resource Monitoring": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check monitoring dashboards (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review alert policies (`monitoring.alertPolicies.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify logging configuration (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for custom metrics (`monitoring.metricDescriptors.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review monitoring optimization (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify monitoring security (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for monitoring automation (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review monitoring cost optimization (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    }
  },
  "Data Protection": {
    "Data Classification": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for sensitive data (`dlp.inspectTemplates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review data retention (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify data encryption (`compute.disks.get`, `storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for data residency (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review data security (`dlp.inspectTemplates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify data compliance (`dlp.inspectTemplates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for data optimization (`dlp.inspectTemplates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review data automation (`dlp.inspectTemplates.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Privacy Controls": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review privacy policies (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for data access logs (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Verify consent management (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Check for data deletion (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.364Z"
    },
    "Review privacy security (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify privacy compliance (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for privacy optimization (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review privacy automation (`resourcemanager.projects.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Compliance Standards": {
    "Regulatory Compliance": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for GDPR compliance (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review HIPAA compliance (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify PCI DSS compliance (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for SOC 2 compliance (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review compliance security (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify compliance optimization (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for compliance automation (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review compliance cost optimization (`securitycenter.findings.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Audit Logging": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review audit logs (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for log retention (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify log export (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for log analysis (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review audit security (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify audit optimization (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for audit automation (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review audit cost optimization (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "CI/CD": {
    "Cloud Build": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "List all build configurations (`cloudbuild.builds.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check build triggers (`cloudbuild.triggers.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review build artifacts (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify build security (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for build optimization (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review build automation (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify build cost optimization (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for build security posture (`cloudbuild.builds.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Deployment": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check deployment history (`clouddeploy.releases.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review deployment configurations (`clouddeploy.deliveryPipelines.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify deployment security (`clouddeploy.releases.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for deployment automation (`clouddeploy.deliveryPipelines.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review deployment optimization (`clouddeploy.releases.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify deployment cost optimization (`clouddeploy.releases.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for deployment security posture (`clouddeploy.releases.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review deployment automation (`clouddeploy.releases.get`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Monitoring & Logging": {
    "Cloud Monitoring": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check monitoring dashboards (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review alert policies (`monitoring.alertPolicies.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify metric collection (`monitoring.metricDescriptors.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for custom metrics (`monitoring.metricDescriptors.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review monitoring optimization (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify monitoring security (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for monitoring automation (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review monitoring cost optimization (`monitoring.dashboards.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Cloud Logging": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check log retention (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review log exports (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify log analysis (`logging.logEntries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for log-based metrics (`logging.metrics.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review logging optimization (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Verify logging security (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Check for logging automation (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Review logging cost optimization (`logging.sinks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "BigQuery Audit Items": {
    "Check for stale partitioning (bigquery-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Identify deprecated UDFs (bigquery-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Query optimization analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "BigQuery cost optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Dataset access controls review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "BigQuery job monitoring": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Resource Utilization Items": {
    "Cloud SQL instance utilization (resource-utilization-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Database CPU utilization analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Database memory utilization analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Database disk utilization analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Database connection monitoring": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Database scaling recommendations": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Unused IP address detection (resource-utilization-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Load balancer traffic analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "VM instance scheduling optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "VM instance utilization trends": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Storage Lifecycle Items": {
    "Standard tier usage analysis (storage-lifecycle-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Unused bucket detection (storage-lifecycle-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Storage cost calculation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Storage access pattern analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Storage class transition recommendations": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Object lifecycle policy optimization": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Monitoring and Alerting Items": {
    "Cost anomaly alerts (monitoring-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Missing critical alerts detection (monitoring-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Alert notification channel verification": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Alert coverage analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    },
    "Alert effectiveness assessment": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.365Z"
    }
  },
  "Cost Management Items": {
    "Budget alert configuration (budget-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Budget tracking and forecasting": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Budget vs. actual spending analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Budget allocation by service": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Discount utilization analysis (discount-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Committed use discount opportunities": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Sustained use discount tracking": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Discount optimization recommendations": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Resource tagging compliance (cost-allocation-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Cost center allocation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Project-level cost analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Service-level cost breakdown": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "Compliance Items": {
    "Data location compliance (data-protection-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Cross-region data transfer analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Regional compliance verification": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "Security Items": {
    "OS login configuration verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Confidential computing verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Private cluster configuration (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Workload identity verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Network policy enforcement (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Binary authorization verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Pod security policy verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "VPC flow logs verification (checklist-verification.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Network segmentation analysis": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Cross-VPC connectivity audit": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "Storage Items": {
    "Bucket versioning verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Bucket lifecycle rules review (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Bucket retention policies verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Bucket logging configuration (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Bucket lock verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Object immutability verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Storage class transition verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Bucket access logs verification (storage-audit.js)": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "1. Development Process": {
    "Follow the standards in `AUDIT_DEVELOPMENT_RULES.md`": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Use the provided template for new audit scripts": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Implement all required error handling": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Include comprehensive testing": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Document all functions and parameters": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "2. Required Components": {
    "Authentication setup": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Input validation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Resource collection": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Analysis logic": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Recommendation generation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Results formatting": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Error handling": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Logging": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "3. Testing Requirements": {
    "Unit tests for all functions": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Integration tests for API calls": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Mock responses for testing": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Error scenario testing": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Output validation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "4. Documentation": {
    "README with setup instructions": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Function documentation": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Example usage": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Error handling guide": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Output format description": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "5. Code Review": {
    "Security review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Performance review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Reliability review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Maintainability review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Compliance review": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "6. Deployment": {
    "Version control": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Dependency management": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Environment configuration": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Credential management": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Access control": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Passing/Implemented": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Failing/Not Implemented": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Not Started": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Not Applicable": {
      "status": "not implemented",
      "error": null,
      "script": null,
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "Billing & Cost Management": {
    "List all billing accounts (`billing.accounts.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Check for committed use discounts (`compute.commitments.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Review budget alerts (`billing.budgets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Detect idle resources (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Review cost allocation tags (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Identify projects/services with high/abnormal spend (`billing.accounts.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "billing-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    }
  },
  "Resource Utilization": {
    "Find idle/underutilized VMs (`monitoring.timeSeries.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "resource-utilization-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Find unused disks (`compute.disks.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "resource-utilization-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Find underutilized databases (`sql.instances.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "resource-utilization-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Recommend resizing or deleting underused resources (`compute.instances.delete`)": {
      "status": "not implemented",
      "error": null,
      "script": "resource-utilization-audit.js",
      "timestamp": "2025-05-11T19:57:33.366Z"
    },
    "Estimate potential monthly savings for each finding": {
      "status": "not implemented",
      "error": null,
      "script": "resource-utilization-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    }
  },
  "Storage Optimization": {
    "Detect unused buckets (`storage.buckets.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Find old snapshots (`compute.snapshots.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Identify cold data (`storage.objects.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Recommend storage class transitions (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Recommend lifecycle policies (`storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Highlight buckets with no lifecycle or retention policies": {
      "status": "not implemented",
      "error": null,
      "script": "storage-lifecycle-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    }
  },
  "Security & Compliance": {
    "Audit IAM/service account permissions (`iam.serviceAccounts.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Check for key rotation (`iam.serviceAccountKeys.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Detect public buckets (`storage.buckets.getIamPolicy`)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Detect open firewall rules (`compute.firewalls.list`)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Check for encryption at rest (`compute.disks.get`, `storage.buckets.get`)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Check for compliance with standards (GDPR, HIPAA, etc.)": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    },
    "Output severity/priority for each finding": {
      "status": "not implemented",
      "error": null,
      "script": "security-audit.js",
      "timestamp": "2025-05-11T19:57:33.367Z"
    }
  },
  "_summary": {
    "total": 424,
    "passed": 47,
    "failed": 0,
    "notImplemented": 377
  },
  "_timestamp": "2025-05-11T19:57:33.367Z"
}