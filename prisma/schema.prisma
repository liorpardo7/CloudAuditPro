generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  googleId  String     @unique
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  auditLogs AuditLog[]
  projects  Project[]
  sessions  Session[]
}

model Project {
  id           String       @id @default(uuid())
  name         String
  status       String
  lastSync     DateTime
  userId       String
  gcpProjectId String
  tokens       OAuthToken[]
  user         User         @relation(fields: [userId], references: [id])
  sessions     Session[]

  @@unique([gcpProjectId, userId])
}

model OAuthToken {
  id           String   @id @default(uuid())
  projectId    String
  accessToken  String
  refreshToken String
  expiry       DateTime
  scopes       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  project      Project  @relation(fields: [projectId], references: [id])
}

model AuditCategory {
  id          String      @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  items       AuditItem[]
}

model AuditItem {
  id          String        @id @default(uuid())
  categoryId  String
  name        String
  description String?
  status      String
  scriptFile  String?
  apiEndpoint String?
  permissions String[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  lastRun     DateTime?
  lastResult  String?
  category    AuditCategory @relation(fields: [categoryId], references: [id])
}

model AuditJob {
  id        String    @id @default(uuid())
  projectId String
  userId    String
  category  String
  status    String
  result    String?
  started   DateTime  @default(now())
  completed DateTime?
  error     String?
}

model Session {
  id        String   @id
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model AuditLog {
  id        String   @id @default(uuid())
  userId    String?
  action    String
  metadata  Json?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
}
